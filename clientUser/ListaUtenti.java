/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.Semaphore;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aldo
 */
public class ListaUtenti extends javax.swing.JFrame implements Runnable {
    private Socket socket;
    private Socket client;
    private ServerSocket listener;
    private BufferedReader in;
    private PrintWriter pw;  
    private DefaultTableModel model;
    private DefaultTableModel utentiDispModel;
    private String stati[];
    private Thread t1;
    private ClientJFrame clientJFrame;
    private String idGiocatore;
    private boolean stato;
    private Semaphore mutex;
    private String ip;
    
    /**
     * Creates new form utentiConnessi
     */
    public ListaUtenti() {
        initComponents();
        
        
        this.model = new NotEditableTableModel();
        this.jTable1.setFocusable(false);
        this.jTable1.setRowSelectionAllowed(false);
      
        
        this.utentiDispModel = new NotEditableTableModel();
        
        model.addColumn("ID"); 
        model.addColumn("Stato");
       // model.addColumn("Indirizzo IP");
        
        utentiDispModel.addColumn("ID"); 
        utentiDispModel.addColumn("Stato");
        
        
        this.jTable1.setModel(model);
        this.utentiDispTable.setModel(this.utentiDispModel);
        
        this.stato = true;
        t1 = new Thread(this,"Thread 1");
        this.mutex = new Semaphore(1);

        this.stati = new String[2];
        this.stati[0] = "Disponibile";
        this.stati[1] = "Occupato";
        
       /* 
          Listener per gestire i click della tabella degli utenti disponibili
        */
          
        utentiDispTable.addMouseListener(new java.awt.event.MouseAdapter()       
        {
            public void mouseClicked(java.awt.event.MouseEvent e)
            {
            
                int row=utentiDispTable.rowAtPoint(e.getPoint());
                int col= utentiDispTable.columnAtPoint(e.getPoint());

                idPlayerTxt.setText(utentiDispTable.getValueAt(row, 0).toString().trim());

            }

        }

        );
           

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        idPlayerTxt = new javax.swing.JTextField();
        invitaBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        utentiDispTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Utenti Connessi :");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        idPlayerTxt.setEnabled(false);

        invitaBtn.setText("Invita a giocare");
        invitaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invitaBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("ID Giocatore :");

        utentiDispTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(utentiDispTable);

        jLabel3.setText("Utenti Disponibili :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idPlayerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invitaBtn)
                        .addGap(141, 519, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idPlayerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invitaBtn))
                .addGap(93, 93, 93))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                       
            
            try {
            pw = new PrintWriter(socket.getOutputStream(), true);
            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
           
            
           } catch (IOException ex) {
            Logger.getLogger(ListaUtenti.class.getName()).log(Level.SEVERE, null, ex);
            }
            
           this.t1.start(); 
            
       
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //this.t1.interrupt();
        this.stato = false;
    }//GEN-LAST:event_formWindowClosing

    private void invitaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invitaBtnActionPerformed
      
       
       InviaInvito inviaInvito =  new InviaInvito(this.mutex,this.socket,this.listener ,this.idPlayerTxt.getText(),this);
       inviaInvito.setPw(this.pw);
       inviaInvito.setIn(this.in);
       inviaInvito.setIdGiocatore(this.idGiocatore);
       
       Thread t1 = new Thread(inviaInvito);
       t1.start();
       
       
    }//GEN-LAST:event_invitaBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaUtenti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaUtenti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaUtenti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaUtenti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaUtenti().setVisible(true);
            }
        });
    }

    
    
     public void listaThread() throws IOException, InterruptedException
    {
        while(stato)
        {
            this.mutex.acquire();
            this.getUsersSocket();
            this.mutex.release();
            Thread.sleep(1600);
        }
        
        //this.dispose();
    }
    
    
    public void getUsersSocket() throws IOException, InterruptedException
    {
        String cmd;
        String num = null;
        String temp = null;
        int count = 0;
       
        this.pw.println("lista"); // Invio il comando al server per ottenere la lista
        pw.flush();
        
    

        num = in.readLine().trim();
              
        if(num.length() > 0){
            count = Integer.parseInt(num);
        }
            
                
        this.model.setRowCount(0);
        this.utentiDispModel.setRowCount(0);

             
        Object[] row = new Object[2];
        Object[] row2 = new Object[2];
        for(int i=0;i<count;i++)
        {
            temp = in.readLine();
            temp = temp.trim();
                
            row = temp.split("-");
            row[1] = this.stati[Integer.parseInt(((String) row[1]).trim())];
                
            this.model.addRow(row); // Aggiungo al model una riga
                
            if(((String)row[1]).trim().equals("Disponibile"))
            {
                row2[0] = row[0];
                row2[1] = row[1];

                this.utentiDispModel.addRow(row2);
            }
                    
        }
              
               
    }
    

    public void startUtentiThread()
    {
        this.stato = true;
        Thread utenti = new Thread(this);
        utenti.start();
    }
    
    
    public String getIdGiocatore() {
        return idGiocatore;
    }

    public void setIdGiocatore(String idGiocatore) {
        this.idGiocatore = idGiocatore;
    }
    
   
    
    public Socket getSocket() {
        return socket;
    }

    public void setSocket(Socket socket) {
        this.socket = socket;
    }

    public void setIn(BufferedReader in) {
        //this.in = in;
    }

    public void setPw(PrintWriter pw) {
        this.pw = pw;
    }
    

    public boolean isStato() {
        return stato;
    }

    public void setStato(boolean stato) {
        this.stato = stato;
    }

    public ServerSocket getListener() {
        return listener;
    }

    public void setListener(ServerSocket listener) {
        this.listener = listener;
    }

    public ClientJFrame getClientJFrame() {
        return clientJFrame;
    }

    public void setClientJFrame(ClientJFrame clientJFrame) {
        this.clientJFrame = clientJFrame;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idPlayerTxt;
    private javax.swing.JButton invitaBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable utentiDispTable;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
      
        try {
            
            this.listaThread();
            
        } catch (IOException ex) {
            Logger.getLogger(ListaUtenti.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(ListaUtenti.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    

}
