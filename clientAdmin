/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ConnectException;
import java.net.NoRouteToHostException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author aldo
 */
public class Main extends javax.swing.JFrame implements Runnable{

   
    private String serverName;
    private int porta;
    private Socket server;
    private PrintWriter pw;
    private BufferedReader in;
    
        
    public Main() {
         try {
              UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
          } catch (ClassNotFoundException ex) {
              Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
          } catch (InstantiationException ex) {
              Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IllegalAccessException ex) {
              Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
          } catch (UnsupportedLookAndFeelException ex) {
              Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
          }

        
        initComponents();
        
        this.serverName = "127.0.0.1";
        this.porta = 8025;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        accediBtn = new javax.swing.JButton();
        partiteInCorsoBtn = new javax.swing.JButton();
        partiteGiocateBtn = new javax.swing.JButton();
        portaTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ipTxt = new javax.swing.JTextField();
        disconnettiBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Battagglia Navale - Admin");
        setMinimumSize(new java.awt.Dimension(284, 361));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jLabel1.setText("Admin");

        jLabel2.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        jLabel2.setText("Battaglia Navale");

        accediBtn.setText("Accedi");
        accediBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accediBtnActionPerformed(evt);
            }
        });

        partiteInCorsoBtn.setText("Lista Partite in Corso");
        partiteInCorsoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partiteInCorsoBtnActionPerformed(evt);
            }
        });

        partiteGiocateBtn.setText("Partite Giocate");
        partiteGiocateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partiteGiocateBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Indirizzo IP :");

        jLabel4.setText("Porta :");

        disconnettiBtn.setText("Disconnetti");
        disconnettiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnettiBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(portaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(accediBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(partiteGiocateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(ipTxt)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(partiteInCorsoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                            .addComponent(disconnettiBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel4)
                .addGap(3, 3, 3)
                .addComponent(portaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(accediBtn)
                .addGap(9, 9, 9)
                .addComponent(partiteGiocateBtn)
                .addGap(9, 9, 9)
                .addComponent(partiteInCorsoBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disconnettiBtn)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accediBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accediBtnActionPerformed
        
            if(ipTxt.getText().isEmpty() || portaTxt.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Campi ip o porta lasciati vuoti!");
            }
            else
            {
                this.serverName = ipTxt.getText();
                this.porta = Integer.parseInt(portaTxt.getText());
                this.connessioneServer();
            }
        
        
            

    }//GEN-LAST:event_accediBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            this.server.close();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally
        {
            this.dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    private void partiteInCorsoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partiteInCorsoBtnActionPerformed
         PartiteInCorso partiteInCorso = new PartiteInCorso();
         partiteInCorso.setServer(this.server);
         partiteInCorso.setPw(this.pw);
         partiteInCorso.setIn(this.in);
         partiteInCorso.setVisible(true);
    }//GEN-LAST:event_partiteInCorsoBtnActionPerformed

    private void partiteGiocateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partiteGiocateBtnActionPerformed
         PartiteGiocate partiteGiocate = new PartiteGiocate();
         partiteGiocate.setMain(this);
         partiteGiocate.setServer(this.server);
         partiteGiocate.setPw(this.pw);
         partiteGiocate.setIn(this.in);
         partiteGiocate.setVisible(true);
         this.partiteGiocateBtn.setEnabled(false);
    }//GEN-LAST:event_partiteGiocateBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       this.ipTxt.setText("127.0.0.1");
       this.portaTxt.setText("8025");
    }//GEN-LAST:event_formWindowOpened

    private void disconnettiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnettiBtnActionPerformed
        try {
            this.server.close();
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally
        {
              this.ipTxt.setEnabled(true);
              this.portaTxt.setEnabled(true);
              this.accediBtn.setEnabled(true);
        }
    }//GEN-LAST:event_disconnettiBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    public void connessioneServer()
    {
            try {
                
              this.server = new Socket(serverName, porta);
              System.out.println("Just connected to " + server.getRemoteSocketAddress());
              pw = new PrintWriter(server.getOutputStream(), true);
              in = new BufferedReader(new InputStreamReader(server.getInputStream()));
              this.pw.println("admin");
              this.accediBtn.setEnabled(false);
              
              this.ipTxt.setEnabled(false);
              this.portaTxt.setEnabled(false);

          } catch (NoRouteToHostException ex) {
            JOptionPane.showMessageDialog(this, "Server non raggiungibile!");

          }
          catch(ConnectException ex)
          {
            JOptionPane.showMessageDialog(this, "Impossibile connettersi al server!");
          }
          catch(IOException ex)
          {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex); 
          }
                  
         
    }

    public String getServerName() {
        return serverName;
    }

    public void setServerName(String serverName) {
        this.serverName = serverName;
    }

    public int getPorta() {
        return porta;
    }

    public void setPorta(int porta) {
        this.porta = porta;
    }

    public Socket getServer() {
        return server;
    }

    public void setServer(Socket server) {
        this.server = server;
    }

    public PrintWriter getPw() {
        return pw;
    }

    public void setPw(PrintWriter pw) {
        this.pw = pw;
    }

    public JButton getPartiteGiocateBtn() {
        return partiteGiocateBtn;
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accediBtn;
    private javax.swing.JButton disconnettiBtn;
    private javax.swing.JTextField ipTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton partiteGiocateBtn;
    private javax.swing.JButton partiteInCorsoBtn;
    private javax.swing.JTextField portaTxt;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        
    }
}
